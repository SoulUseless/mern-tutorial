{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","errorHandler","hideMapHandler","a","process","id","Authorization","token","onDelete","console","log","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","imageUrl","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","image","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","response","places","getPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.29e11b44.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nfunction Map(props) {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n    \r\n    /* useEffect delays the running of the inner function\r\n        it runs on the first rendering, but will update again when center and zoom is updated\r\n    in the return statement -> renders properly */\r\n    useEffect(() => {\r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n            center: center,\r\n            zoom: zoom,\r\n        });\r\n        new window.google.maps.Marker({ position: center, map: map });\r\n    }, [center, zoom]);\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            className={`map ${props.className}`}\r\n            style={props.style}\r\n        >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from \"../../shared/components/UIElements/Card.js\";\r\nimport Modal from \"../../shared/components/UIElements/Modal.js\";\r\nimport Button from \"../../shared/components/FormElements/Button.js\";\r\nimport Map from \"../../shared/components/UIElements/Map.js\"; \r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport './PlaceItem.css';\r\n\r\nfunction PlaceItem(props) {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n\r\n    function openMapHandler() {\r\n        setShowMap(true);\r\n    }\r\n\r\n    function hideMapHandler() {\r\n        setShowMap(false);\r\n    }\r\n     \r\n    function showDeleteWarningHandler() {\r\n        setShowConfirmModal(true);\r\n    }\r\n\r\n    function closeDeleteWarningHandler() {\r\n        setShowConfirmModal(false);\r\n    }\r\n\r\n    async function confirmDeleteHandler() {\r\n        setShowConfirmModal(false);\r\n        //console.log(\"DELETED\");\r\n        try {\r\n            await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n                \"DELETE\",\r\n                {},\r\n                { Authorization: `Bearer ${auth.token}` }\r\n            );\r\n            props.onDelete(props.id); //run function parsed in from outside\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={hideMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={<Button onClick={hideMapHandler}>CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={showConfirmModal}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={closeDeleteWarningHandler}>\r\n                            Cancel{\" \"}\r\n                        </Button>\r\n\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            Delete{\" \"}\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p className=\"center\">Do you want to proceed and delete?</p>\r\n            </Modal>\r\n\r\n            <li className=\"place-item\">\r\n                <Card className=\"place-item__content\">\r\n                    {isLoading && (\r\n                        <div className=\"center\">\r\n                            <LoadingSpinner asOverlay/>\r\n                            {/*render a loading spinner*/}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"place-item__image\">\r\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.imageUrl}`} alt={props.title} />\r\n                    </div>\r\n\r\n                    <div className=\"place-item__info\">\r\n                        <h2> {props.title} </h2>\r\n                        <h3> {props.address} </h3>\r\n                        <p> {props.description} </p>\r\n                    </div>\r\n\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>\r\n                            VIEW ON MAP\r\n                        </Button>\r\n\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button to={`/places/${props.id}`}>EDIT</Button>\r\n                        )}\r\n\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button danger onClick={showDeleteWarningHandler}>\r\n                                DELETE\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card.js';\r\nimport PlaceItem from \"./PlaceItem.js\";\r\nimport Button from \"../../shared/components/FormElements/Button.js\";\r\n\r\nimport './PlaceList.css';\r\n\r\nfunction PlaceList(props) {\r\n    if (props.items.length === 0) {\r\n        return <div className=\"place-list center\">\r\n            <Card>\r\n                <h2> No places found, time to create one?</h2>\r\n                <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n        </div>\r\n    } else {\r\n        return <ul className=\"place-list\">\r\n            {props.items.map((place) => (\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    imageUrl={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorId={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />\r\n            ))}\r\n        </ul>;\r\n    }\r\n}\r\n\r\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from \"../components/PlaceList.js\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport './UserPlaces.css';\r\n\r\n/* DEPRECATED\r\nconst DUMMY_PLACES = [\r\n    {  \r\n        id: \"p1\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/2/20/Rear_view_of_the_Merlion_statue_at_Merlion_Park%2C_Singapore%2C_with_Marina_Bay_Sands_in_the_distance_-_20140307.jpg\",\r\n        title: \"Merlion\",\r\n        description: \"foobarfizzbang\",\r\n        address: \"Marina Bay\",\r\n        creator: \"u1\",\r\n        location: {\r\n            lat: 1.2868,\r\n            lng: 103.8545\r\n        }\r\n    }, \r\n    {  \r\n        id: \"p2\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/2/20/Rear_view_of_the_Merlion_statue_at_Merlion_Park%2C_Singapore%2C_with_Marina_Bay_Sands_in_the_distance_-_20140307.jpg\",\r\n        title: \"Merelion\",\r\n        description: \"foobarfizzbang\",\r\n        address: \"Marina Bay\",\r\n        creator: \"u2\",\r\n        location: {\r\n            lat: 1.2868,\r\n            lng: 103.8545\r\n        }\r\n    }, \r\n];\r\n*/\r\n\r\n\r\nfunction UserPlaces(props) {\r\n    const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const userId = useParams().userId;\r\n    //console.log(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n    useEffect(() => {//useEffect doesnt like a async function\r\n        const getPlaces = async () => {\r\n            try {\r\n                const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n                setLoadedPlaces(response.places);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getPlaces();\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = (deletedPlaceId) => {\r\n        //handles re-rendering post-deletion\r\n        setLoadedPlaces((prevPlaces) => // note: setloadedplaces and similar can take in one param, current state\r\n            prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n        );\r\n    };\r\n\r\n    //const loadedPlaces = DUMMY_PLACES.filter(place => place.creator === userId);\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                    {/*render a loading spinner*/}\r\n                 </div>\r\n            )}\r\n            {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}