{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","users/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setisValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","email","password","inputHandler","setFormData","isSignIn","setIsSignIn","useHttpClient","isLoading","error","sendRequest","errorHandler","a","preventDefault","console","log","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","user","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.69af4f66.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators.js\";\r\n\r\nfunction inputReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state, //copied the entire original state, then make modifications based on the variable\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n\r\n        case 'TOUCH':\r\n            return {\r\n                ...state, //copied the entire original state, then make modifications based on the variable\r\n                isTouched: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction Input(props) {\r\n    // can always have code to have 2 useStates, but useReducer is easier for complex logic \r\n    //  useReducer( <BiFunction taking in state and action and returns new action>, <initial values>\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isValid: props.initialIsValid || false,\r\n        isTouched: false,\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(\r\n        () => onInput(id, value, isValid),\r\n        [id, onInput, value, isValid]\r\n    ); //will rerun the function when the following dependencies change\r\n\r\n    const changeHandler = event => {\r\n        //dispatch an action, action contains all information required to run inputReducer\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    }\r\n    /* onBlur refers to the action of clicking off the object after clicking on,\r\n    opposite of onClick in a sense */\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n            \r\n        ) : (\r\n            <textarea \r\n                id={props.id}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler} \r\n                value={inputState.value}\r\n                onBlur={touchHandler}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div\r\n            className={`form-control ${\r\n                (!inputState.isValid && inputState.isTouched) && \"form-control--invalid\"\r\n            }`}\r\n        >\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {(!inputState.isValid && inputState.isTouched) && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import { useCallback, useReducer } from 'react';\r\n\r\nfunction formReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if(!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value,\r\n                        isValid: action.isValid,\r\n                    },\r\n                }, \r\n                isValid: formIsValid\r\n            };\r\n        \r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\n//this becomes a custom hook like useReducer, returning a state, and a function to update the state\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    }); \r\n\r\n    //takes in params required for onInput in Input.js\r\n    //useCallback wraps the function to prevent triggering of \r\n    //infinite loops with new function signatures resulting in change \r\n    //in data which triggers creation of new function objects\r\n    \r\n    //dependencies are stored to re-render the function\r\n    //else the function is \"memoized\" and stored away for future use => no new function object created\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    //setFormData basically completely overrides the stored form data\r\n    //intended for pushing in information that arrived late\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: \"SET_DATA\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n} \r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from './Button';\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setisValid] = useState(false);\r\n\r\n    const filePickerRef = useRef(); \r\n\r\n    useEffect(() => {\r\n        if (!file) { \r\n            return;\r\n        }\r\n        const fileReader = new FileReader(); //browser side js\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        }; //pseudo callback that runs when function below is called\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n\r\n\r\n    const pickedHandler = (event) => {\r\n        //console.log(event.target.files);\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        // event.target.files stores the file that use uploaded\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setisValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setisValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: \"none\" }}\r\n                type=\"file\"\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n\r\n            <div className={`image-upload ${props.center && \"center\"}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p> Place pick an image </p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input.js\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from \"../../shared/util/validators.js\";\r\nimport Button from \"../../shared/components/FormElements/Button.js\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useForm } from \"../../shared/hooks/form-hook.js\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook.js\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nfunction Auth(props) {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                isValid: false,\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const [isSignIn, setIsSignIn] = useState(true);\r\n    const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n    /* ABSTRACTED OUT\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    */\r\n\r\n    async function authSubmitHandler(event) {\r\n        event.preventDefault();\r\n        //send to backend url listener\r\n\r\n        console.log(formState.inputs);\r\n\r\n        //setIsLoading(true); - ABSTRACTED\r\n        if (isSignIn) {\r\n            //dont need to try catch also since that is also abstracted out\r\n            //instead of fetch\r\n            let responseData;\r\n            try { //this one to catch whether the log in is successful\r\n                responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n                    \"POST\",\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value,\r\n                    }),\r\n                    {\r\n                        \"Content-Type\": \"application/json\", //configure type of request to json\r\n                    }\r\n                );\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) {\r\n                console.log(err);\r\n                //just to stop the function when an error happens\r\n            }\r\n                /* ABSTRACTED\r\n                const responseData = await response.json();\r\n                \r\n                if (response.ok) {//rejects 400s and 500s code\r\n                    //console.log(responseData);\r\n                    setIsLoading(false); //set before login(), context might change and cause redirection\r\n                    auth.login();\r\n                } else {\r\n                    throw new Error(responseData.message);\r\n                }\r\n                \r\n            } catch (err) {\r\n                //console.log(err);\r\n\r\n                //below functionality is all handled inside the hook\r\n                //setIsLoading(false);\r\n                //setError(err.message || \"Something went Wrong\");\r\n            }\r\n            */\r\n        } else { //sign up\r\n\r\n            let responseData;\r\n            try {\r\n                const formData = new FormData(); //default browser js\r\n                formData.append(\"email\", formState.inputs.email.value); //formData accepts all datatypes\r\n                formData.append(\"name\", formState.inputs.name.value);\r\n                formData.append(\"password\", formState.inputs.password.value);\r\n                formData.append(\"image\", formState.inputs.image.value); //images are accepted also\r\n\r\n                responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n                    \"POST\",\r\n                    formData //headers are set automatically using fetch under the hood\r\n                );\r\n                auth.login(responseData.user.id, responseData.token);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            \r\n                /* ABSTRACTED\r\n                const responseData = await response.json();\r\n                \r\n                \r\n                if (response.ok) {//rejects 400s and 500s code\r\n                    console.log(responseData);\r\n                    setIsLoading(false); //set before login(), context might change and cause redirection\r\n                    auth.login();\r\n                } else {\r\n                    throw new Error(responseData.message);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setError(err.message || \"Something went Wrong\");\r\n            }\r\n            */\r\n        }\r\n        /* deprecated\r\n        console.log(formState.inputs); //TODO: send to backend\r\n        */\r\n    }\r\n\r\n    function switchModeHandler(event) {\r\n        if (!isSignIn) { //switching to log in screen\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined,\r\n                    image: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else { //switching to sign up screen\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: {\r\n                        value: \"\",\r\n                        isValid: false,\r\n                    },\r\n                    image: {\r\n                        value: null,\r\n                        isValid: false,\r\n                    },\r\n                },\r\n                false\r\n            );\r\n        }\r\n        setIsSignIn(prevMode => !prevMode);\r\n    }\r\n    \r\n    /* ABSTRACTED\r\n    //resets the error state\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n            <Card className=\"authentication\">\r\n                {\r\n                    isLoading && (\r\n                        <LoadingSpinner asOverlay />\r\n                    ) /*render a loading spinner*/\r\n                }\r\n                <h2> {isSignIn ? \"Log In\" : \"Sign-Up\"}</h2>\r\n                <hr />\r\n                <form className=\"form\" onSubmit={authSubmitHandler}>\r\n                    {!isSignIn && (\r\n                        <Input\r\n                            element=\"input\"\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Your Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter valid name\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n\r\n                    {!isSignIn && (\r\n                        <ImageUpload\r\n                            center\r\n                            id=\"image\"\r\n                            onInput={inputHandler}\r\n                            errorText=\"Please provide an image\"\r\n                        />\r\n                    )}\r\n\r\n                    <Input\r\n                        id=\"email\"\r\n                        element=\"input\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\"\r\n                        validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email\"\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Input\r\n                        id=\"password\"\r\n                        element=\"input\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"Please enter your password\"\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isSignIn ? \"Log In\" : \"Sign-Up\"}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>\r\n                    Switch to {isSignIn ? \"Sign-Up\" : \"Log In\"}\r\n                </Button>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Auth;"],"sourceRoot":""}