{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","errorHandler","useState","loadedUsers","setLoadedUsers","useEffect","a","response","users","console","log","getUsers","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+LCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,cCmBpCE,MArBf,SAAkBV,GACd,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACZ,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAGnF,yBAAKb,UAAU,mBACX,gCAAMD,EAAMc,KAAZ,KACA,4BACKd,EAAMe,WADX,IAC6C,IAArBf,EAAMe,WAAmB,QAAU,eCOpEC,MApBf,SAAmBhB,GACf,OAA2B,IAAvBA,EAAMiB,MAAMC,OACL,yBAAKjB,UAAU,UAClB,kBAACF,EAAA,EAAD,KACI,kDAID,wBAAIE,UAAU,cAEbD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAUC,IAAKD,EAAKR,GACTA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,c,wBC+D5DK,UA7Ef,WAAkB,IAAD,EAC2CC,cAAhDC,EADK,EACLA,UAAWC,EADN,EACMA,MAAOC,EADb,EACaA,YAAaC,EAD1B,EAC0BA,aAD1B,EAOyBC,qBAPzB,mBAONC,EAPM,KAOOC,EAPP,KA8Db,OArDAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEcN,EAAYd,mCAF1B,OAEHqB,EAFG,OAGTH,EAAeG,EAASC,OAHf,gDAKTC,QAAQC,IAAR,MALS,yDAAH,qDASdC,KAwBD,CAACX,IAoBA,oCACI,kBAACY,EAAA,EAAD,CAAYb,MAAOA,EAAOc,QAASZ,IAClCH,GACG,yBAAKxB,UAAU,UACX,kBAACwC,EAAA,EAAD,QAKNhB,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/8.488b7e2a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar.js\";\r\nimport Card from \"../../shared/components/UIElements/Card.js\"\r\n\r\nimport './UserItem.css';\r\n\r\nfunction UserItem(props) {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${props.id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                    </div>\r\n                    \r\n                    <div className=\"user-item__info\">\r\n                        <h2> {props.name} </h2>\r\n                        <h3> \r\n                            {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n                        </h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li> \r\n    );\r\n}\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport './UsersList.css';\r\n\r\nimport UserItem from './UserItem.js';\r\nimport Card from '../../shared/components/UIElements/Card.js';\r\n\r\nfunction UsersList(props) {\r\n    if (props.items.length === 0) {\r\n        return <div className=\"center\">\r\n            <Card>\r\n                <h2> No Users Found </h2>\r\n            </Card>\r\n        </div>\r\n    } else {\r\n        return <ul className=\"users-list\">\r\n            {\r\n                props.items.map(user => <UserItem key={user.id}\r\n                                                   id={user.id} \r\n                                                   image={user.image} \r\n                                                   name={user.name} \r\n                                                   placeCount={user.places.length} />)\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList.js\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n \r\nfunction Users() {\r\n    const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n    /* ABSTRACTED OUT\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    */\r\n\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n    //fetch user information when certain dependencies change\r\n    useEffect(() => {//useEffect doesnt like a async function\r\n        const getUsers = async () => {\r\n            try {\r\n                const response = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/users\");\r\n                setLoadedUsers(response.users);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n            \r\n        getUsers();\r\n\r\n        /* ABSTRACTED\r\n        const sendRequest = async () => { //but can wrap an async function inside\r\n            setIsLoading(true);\r\n            try {\r\n                //default fetch() request is GET, so no need to configure\r\n                const response = await fetch(\"http://localhost:5000/api/users\");\r\n\r\n                const responseData = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setError(err.message);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n        sendRequest();\r\n        */\r\n    }, [sendRequest]);\r\n   \r\n    /* ABSTRACTED\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n    */\r\n\r\n    /*\r\n    const USERS = [\r\n        {\r\n            id: 'u1', \r\n            name: 'john',\r\n            image: 'https://drinkstraightup.files.wordpress.com/2013/05/a-gentlemans-friend-2-feature-e1368290909533.jpg?w=297&h=196',\r\n            places: 123\r\n        }\r\n    ];\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                    {/*render a loading spinner*/}\r\n                 </div>\r\n            )}\r\n            {/* ensure that everything is loaded before trying to render the element */}\r\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers}/>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;"],"sourceRoot":""}