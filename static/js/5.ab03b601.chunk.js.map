{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setisValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","useHttpClient","isLoading","error","sendRequest","errorHandler","auth","useContext","AuthContext","title","description","address","image","inputHandler","history","useHistory","a","preventDefault","formData","FormData","append","console","log","process","Authorization","token","response","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/5.ab03b601.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators.js\";\r\n\r\nfunction inputReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state, //copied the entire original state, then make modifications based on the variable\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n\r\n        case 'TOUCH':\r\n            return {\r\n                ...state, //copied the entire original state, then make modifications based on the variable\r\n                isTouched: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction Input(props) {\r\n    // can always have code to have 2 useStates, but useReducer is easier for complex logic \r\n    //  useReducer( <BiFunction taking in state and action and returns new action>, <initial values>\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || \"\",\r\n        isValid: props.initialIsValid || false,\r\n        isTouched: false,\r\n    });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(\r\n        () => onInput(id, value, isValid),\r\n        [id, onInput, value, isValid]\r\n    ); //will rerun the function when the following dependencies change\r\n\r\n    const changeHandler = event => {\r\n        //dispatch an action, action contains all information required to run inputReducer\r\n        dispatch({\r\n            type: \"CHANGE\",\r\n            val: event.target.value,\r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    }\r\n    /* onBlur refers to the action of clicking off the object after clicking on,\r\n    opposite of onClick in a sense */\r\n    const element =\r\n        props.element === \"input\" ? (\r\n            <input\r\n                id={props.id}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            />\r\n            \r\n        ) : (\r\n            <textarea \r\n                id={props.id}\r\n                rows={props.rows || 3}\r\n                onChange={changeHandler} \r\n                value={inputState.value}\r\n                onBlur={touchHandler}\r\n            />\r\n        );\r\n\r\n    return (\r\n        <div\r\n            className={`form-control ${\r\n                (!inputState.isValid && inputState.isTouched) && \"form-control--invalid\"\r\n            }`}\r\n        >\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {(!inputState.isValid && inputState.isTouched) && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import { useCallback, useReducer } from 'react';\r\n\r\nfunction formReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if(!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value,\r\n                        isValid: action.isValid,\r\n                    },\r\n                }, \r\n                isValid: formIsValid\r\n            };\r\n        \r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\n//this becomes a custom hook like useReducer, returning a state, and a function to update the state\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    }); \r\n\r\n    //takes in params required for onInput in Input.js\r\n    //useCallback wraps the function to prevent triggering of \r\n    //infinite loops with new function signatures resulting in change \r\n    //in data which triggers creation of new function objects\r\n    \r\n    //dependencies are stored to re-render the function\r\n    //else the function is \"memoized\" and stored away for future use => no new function object created\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    //setFormData basically completely overrides the stored form data\r\n    //intended for pushing in information that arrived late\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: \"SET_DATA\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n} \r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from './Button';\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setisValid] = useState(false);\r\n\r\n    const filePickerRef = useRef(); \r\n\r\n    useEffect(() => {\r\n        if (!file) { \r\n            return;\r\n        }\r\n        const fileReader = new FileReader(); //browser side js\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        }; //pseudo callback that runs when function below is called\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n\r\n\r\n    const pickedHandler = (event) => {\r\n        //console.log(event.target.files);\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        // event.target.files stores the file that use uploaded\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setisValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setisValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: \"none\" }}\r\n                type=\"file\"\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n\r\n            <div className={`image-upload ${props.center && \"center\"}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p> Place pick an image </p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input.js\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators.js\";\r\nimport Button from \"../../shared/components/FormElements/Button.js\";\r\nimport { useForm } from \"../../shared/hooks/form-hook.js\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nimport \"./PlaceForm.css\";\r\n\r\n\r\n\r\nfunction NewPlace(props) {\r\n\r\n    const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    //we can choose not to pull out the third argument of the array that useForm returns\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            description: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            address: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false,\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    //takes in params required for onInput in Input.js\r\n    //useCallback wraps the function to prevent triggering of \r\n    //infinite loops with new function signatures resulting in change \r\n    //in data which triggers creation of new function objects\r\n\r\n    /*\r\n    OLD FUNCTION ABSTRACTED OUT TO GENERALISE\r\n    //dependencies are stored to re-render the function\r\n    //else the function is \"memoized\" and stored away for future use => no new function object created\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    */\r\n\r\n    const history = useHistory();\r\n    \r\n    async function placeSubmitHandler(event) {\r\n        event.preventDefault();\r\n        //console.log(formState.inputs); //TODO: send to backend\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"title\", formState.inputs.title.value); //formData accepts all datatypes\r\n            formData.append(\"description\", formState.inputs.description.value);\r\n            formData.append(\"address\", formState.inputs.address.value);\r\n            formData.append(\"image\", formState.inputs.image.value); //images are accepted also\r\n                \r\n            console.log(process.env.REACT_APP_BACKEND_URL + \"/places\");\r\n            const response = await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n                \"POST\",\r\n                formData,\r\n                { Authorization: `Bearer ${auth.token}` }\r\n            );\r\n            console.log(response);\r\n            \r\n            history.push(\"/\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                    {/*render a loading spinner*/}\r\n                </div>\r\n            )}\r\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n                <Input\r\n                    id=\"title\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title\"\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Input\r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please enter a valid description, >5 characters\"\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Input\r\n                    id=\"address\"\r\n                    element=\"input\"\r\n                    label=\"Address\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address\"\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <ImageUpload\r\n                    center\r\n                    id=\"image\"\r\n                    onInput={inputHandler}\r\n                    errorText=\"Please provide an image\"\r\n                />\r\n\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    Add New Place\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewPlace;"],"sourceRoot":""}